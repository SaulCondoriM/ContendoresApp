services:
  # Base de datos MariaDB
  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: gamestore_database
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: gamestore_db
      MYSQL_USER: gamestore_user
      MYSQL_PASSWORD: gamestore_password
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3307:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - gamestore_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gamestore_backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      DB_HOST: database
      DB_PORT: 3306
      DB_USER: gamestore_user
      DB_PASSWORD: gamestore_password
      DB_NAME: gamestore_db
      JWT_SECRET: your-super-secret-jwt-key-for-production
      PORT: 5000
    depends_on:
      database:
        condition: service_healthy
    networks:
      - gamestore_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      timeout: 10s
      retries: 5

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: gamestore_frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - gamestore_network

# Volúmenes persistentes
volumes:
  mariadb_data:
    driver: local

# Red personalizada para comunicación entre contenedores
networks:
  gamestore_network:
    driver: bridge